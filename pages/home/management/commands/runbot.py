from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ContextTypes
from django.core.management.base import BaseCommand
import os
from django.conf import settings

TOKEN = "7720459194:AAGOywcphZAK8pTwIwdPp2uVYwMKw40ZugA"
KEYWORD = "–ø—á—ë–ª–∫–∞"

ALLOWED_USERS_PATH = os.path.join(settings.BASE_DIR, "pages", "home", "management", "allowed_users.txt")

def load_allowed_users():
    if not os.path.exists(ALLOWED_USERS_PATH):
        return set()
    with open(ALLOWED_USERS_PATH, "r", encoding="utf-8") as f:
        return set(line.strip() for line in f if line.strip())

def add_allowed_user(user_id: str):
    with open(ALLOWED_USERS_PATH, "a", encoding="utf-8") as f:
        f.write("\n" + user_id)

async def handle_keyword(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = str(update.effective_chat.id)
    message_text = update.message.text.strip().lower()

    if message_text == KEYWORD:
        allowed = load_allowed_users()
        if chat_id in allowed:
            await update.message.reply_text("‚úÖ –¢—ã —É–∂–µ –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è.")
        else:
            add_allowed_user(chat_id)
            await update.message.reply_text("üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –¢—ã —Ç–µ–ø–µ—Ä—å –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è.")
    else:
        await update.message.reply_text("‚ùå –ù–µ–≤–µ—Ä–Ω–æ–µ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ. –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑.")

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ß—Ç–æ–±—ã –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è, –ø—Ä–∏—à–ª–∏ –º–Ω–µ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ üóùÔ∏è")

class Command(BaseCommand):
    help = "–ó–∞–ø—É—Å–∫ telegram-–±–æ—Ç–∞"

    def handle(self, *args, **kwargs):
        app = ApplicationBuilder().token(TOKEN).build()

        app.add_handler(CommandHandler("start", start))
        app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_keyword))

        app.run_polling()